<<readBam, echo=FALSE, cache=TRUE>>=

## Rsamtools
what <- c("rname")# , "strand", "pos", "qwidth", "seq")
param <- ScanBamParam(what = what)

files <- list.files("/home/ele/Data/RNAseq/mapping/", "*.bam$")

countsList <- list()
for (fi in files) {
  bam <- scanBam(paste("/home/ele/Data/RNAseq/mapping/", fi, sep=""), param=param)
  counts <- table(bam[[1]]$rname)
  counts.frame <- as.data.frame(counts)
  countsList[[fi]] <- counts.frame
}

counts.frame.long <- melt(countsList, id.vars="Var1")
counts.frame.long$variable <- NULL

counts.frame.wide <- reshape(counts.frame.long, v.names="value",
                             idvar="Var1", direction="wide", timevar="L1")
names(counts.frame.wide) <- gsub("^value\\.", "", names(counts.frame.wide))
names(counts.frame.wide) <- gsub("\\.bam$", "", names(counts.frame.wide))
row.names(counts.frame.wide) <- counts.frame.wide$Var1
counts.frame.wide$Var1 <- NULL

## Just to see the clustering fo technical replicates!!!

sex.conds <- factor(ifelse(grepl("M_\\d", names(counts.frame.wide)), "male", "female" ))
eel.conds <- factor(ifelse(grepl("^AA", names(counts.frame.wide)), "Aa", "Aj" ))
pop.conds <- factor(ifelse(grepl("\\w\\w_R.", names(counts.frame.wide)), "EU", "TW" ))

cds.raw <- newCountDataSet(counts.frame.wide, sex.conds)
cds.raw <- estimateSizeFactors(cds.raw)
cds.raw <- estimateVarianceFunctions(cds.raw)

vsd.raw <- getVarianceStabilizedData( cds.raw )
dists.raw <- dist( t( vsd.raw ) )
idists.raw <- as.matrix(dists.raw)

### Sum up technical replicates!!!
counts.frame.long$L1 <- gsub("_\\d.bam", "", counts.frame.long$L1)
counts.frame.long$L1 <- as.factor(counts.frame.long$L1)
counts.frame <- as.data.frame(tapply(counts.frame.long$value,
                                     list(counts.frame.long$Var1, counts.frame.long$L1),
                                     sum))

## use counts frame for all calculations
@ 

<<tech.rep.plot, echo=FALSE>>=
## check that all tech-reps are clustering, m/f are clustering, etc...
png("../figures/heat_tech_rep.png", width=720, height=720)
heatmap(idists , symm=TRUE, margins = c (7,7))
dev.off()
@ 

