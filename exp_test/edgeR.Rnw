<<edgeR, echo=FALSE, cache=TRUE, results=hide>>=

design <- model.matrix(~sex.conds*eel.conds*pop.conds)

## Counts frame to full DGEList

ed <- DGEList(co.f, lib.size=colSums(co.f))
ed <- calcNormFactors(ed)
ed <- estimateGLMCommonDisp(ed, design=design)
ed <- estimateGLMTrendedDisp(ed, design=design)
ed <- estimateGLMTagwiseDisp(ed, design=design)

## glmfit for DGEList uding tagwise dispersion
glmfit <- glmFit(ed, design, dispersion=ed$tagwise.dispersion)

glm.wrapper <- function(de.obj, fit.obj, conds.regex){
  glm.list <- list()
  coe <- names(as.data.frame(fit.obj$design))
  coe.l <- lapply(conds.regex, function (x) grep(x, coe))
  for (i in 1:length(conds.regex)){
    glm.list[[conds.regex[[i]]]] <- glmLRT(de.obj, fit.obj, coef=coe.l[[i]])
  }
  return(glm.list)
}

## selects all coefficients being contained in each other hierachically
combi.conds <- gsub(":", ".*", names(as.data.frame(glmfit$design))[2:8])
glm.l <- glm.wrapper(ed, glmfit, combi.conds)

## topTags works (same as using p.adjust directly)
topTags.l <- lapply(glm.l, function (x){
  tt <- topTags(x, n=40000) ## set as high as the length 
  tt[tt$table$adj.P.Val<0.05] ## get only below adj.P
})

contigs.l <- lapply(topTags.l, function (x) rownames(x$table))
contigs.all <- unlist(contigs.l)

## plot fitted vs. observed values for all contigs and libraries 
cf <- cbind(rownames(co.f), co.f)
observed <- melt.data.frame(cf, id.vars="rownames(co.f)")
names(observed) <- c("contig", "lib", "observed")
long.fitted <- melt(glmfit$fitted.values)
names(long.fitted) <- c("contig", "lib", "fitted")
fit.comb <- merge(observed, long.fitted)

fit.plot <- ggplot(fit.comb, aes(observed, fitted)) +
  geom_point() +
  facet_wrap(~lib) +
  scale_x_log10() +
  scale_y_log10() +
  theme_bw()


<<edgeR.venns, echo=FALSE, results=hide>>=

ggsave("/home/ele/thesis/experimental_infection/figures/fit_obs.png",
       fit.plot,
       width=21, height=21)
  
venn.diagram(list(sex         = match(contigs.l[[1]], contigs.all),
                  sex_eel     = match(contigs.l[[4]], contigs.all),
                  sex_pop     = match(contigs.l[[5]], contigs.all),
                  sex_eel_pop = match(contigs.l[[7]], contigs.all)),
             filename = "/home/ele/thesis/experimental_infection/figures/sex_venn.tiff")

venn.diagram(list(eel         = match(contigs.l[[2]], contigs.all),
                  sex_eel     = match(contigs.l[[4]], contigs.all),
                  eel_pop     = match(contigs.l[[6]], contigs.all),
                  sex_eel_pop = match(contigs.l[[7]], contigs.all)),
             filename = "/home/ele/thesis/experimental_infection/figures/eel_venn.tiff")

venn.diagram(list(pop         = match(contigs.l[[3]], contigs.all),
                  sex_pop     = match(contigs.l[[5]], contigs.all),
                  eel_pop     = match(contigs.l[[6]], contigs.all),
                  sex_eel_pop = match(contigs.l[[7]], contigs.all)),
             filename = "/home/ele/thesis/experimental_infection/figures/pop_venn.tiff")

venn.diagram(list(pop         = match(contigs.l[[3]], contigs.all),
                  eel         = match(contigs.l[[2]], contigs.all)),
                  sex_pop     = match(contigs.l[[5]], contigs.all),
                  eel_pop     = match(contigs.l[[6]], contigs.all),
             filename = "/home/ele/thesis/experimental_infection/figures/what_in_pop_venn.tiff")

venn.diagram(list(pop_all     = match(contigs.l[[3]], contigs.all),
                  eel_all     = match(contigs.l[[2]], contigs.all),
                  sex_all     = match(contigs.l[[1]], contigs.all)),
             filename = "/home/ele/thesis/experimental_infection/figures/combi_venn.tiff")




## par(mfrow = c(1, 2))
## maPlot(ed$counts[, 1], ed$counts[, 2], normalize = TRUE, pch = 19,
##            cex = 0.4, ylim = c(-8, 8))
## grid(col = "blue")
## abline(h = log2(ed$samples$norm.factors[2]/ed$samples$norm.factors[1]),
##            col = "red", lwd = 4)

## eff.libsize <- ed$samples$lib.size * ed$samples$norm.factors

## maPlot(ed$counts[, 1]/eff.libsize[1], ed$counts[, 2]/eff.libsize[2],
##     normalize = FALSE, pch = 19, cex = 0.4, ylim = c(-8, 8))
## grid(col = "blue")

@ 
  
<<edgeR.heat, echo=FALSE>>=

cox1.contigs <- contig.df[grepl("Cytochrome C oxidase subunit 1", contig.df$Bm.annot, ignore.case=TRUE) |
                         grepl("Cytochrome C oxidase subunit 1", contig.df$Ce.annot, ignore.case=TRUE) |
                         grepl("Cytochrome C oxidase subunit 1", contig.df$nr.uniprot.annot, ignore.case=TRUE),
                         "contig"]
cox2.contigs <- contig.df[grepl("Cytochrome C oxidase subunit 2", contig.df$Bm.annot, ignore.case=TRUE) |
                         grepl("Cytochrome C oxidase subunit 2", contig.df$Ce.annot, ignore.case=TRUE) |
                         grepl("Cytochrome C oxidase subunit 2", contig.df$nr.uniprot.annot, ignore.case=TRUE),
                         "contig"]

sperm.contigs <- contig.df[grepl("sperm", contig.df$Bm.annot, ignore.case=TRUE) |
                         grepl("sperm", contig.df$Ce.annot, ignore.case=TRUE) |
                         grepl("sperm", contig.df$nr.uniprot.annot, ignore.case=TRUE),
                         "contig"]

P450.contigs <- contig.df[grepl("P450", contig.df$Bm.annot, ignore.case=TRUE) |
                          grepl("P450", contig.df$Ce.annot, ignore.case=TRUE) |
                          grepl("P450", contig.df$nr.uniprot.annot, ignore.case=TRUE),
                          "contig"]

## Heatmaps for clear categories
cmcol <- colorRampPalette(brewer.pal(8, "RdYlBu"))(256)

sex.only <- contigs.l[[1]][!contigs.l[[1]]%in%contigs.l[[2]] & !contigs.l[[1]]%in%contigs.l[[3]]]
eel.only <- contigs.l[[2]][!contigs.l[[2]]%in%contigs.l[[1]] & !contigs.l[[2]]%in%contigs.l[[3]]]
pop.only <- contigs.l[[3]][!contigs.l[[3]]%in%contigs.l[[1]] & !contigs.l[[3]]%in%contigs.l[[2]]]

heatmap.contig <- function (contigs, csc.regex, rsc.contigs, path, varSd=vsd) {
  contigs.plot <- varSd[contigs, ]
  contigs.plot <- contigs.plot[, c(grep("EU", pop.conds), grep("TW", pop.conds))]

  rsc <- ifelse(rownames(contigs.plot) %in% rsc.contigs, "red", "yellow")
  csc <- ifelse(grepl(csc.regex, colnames(contigs.plot)), "green", "blue")

  png(path, res=100)
  heatmap.2(contigs.plot, col = cmcol, labRow="", 
            ColSideColors=csc, RowSideColors=rsc, trace="none",
            dendrogram="column", density.info="density")
  dev.off()
}

## Sex ##
heatmap.contig(sex.only, "M$", sperm.contigs,
               "/home/ele/thesis/experimental_infection/figures/sex_only_heat.png")

heatmap.contig(contigs.l[[1]][contigs.l[[2]]%in%sig.sex], "M$", sperm.contigs,
               "/home/ele/thesis/experimental_infection/figures/sex_onlyDE_heat.png")

heatmap.contig(contigs.l[[1]], "M$", sperm.contigs,
               "/home/ele/thesis/experimental_infection/figures/sex_all_heat.png")

## eel host ##
heatmap.contig(eel.only, "AJ", P450.contigs, 
               "/home/ele/thesis/experimental_infection/figures/eel_only_heat.png")

heatmap.contig(contigs.l[[2]][contigs.l[[2]]%in%sig.eel], "AJ", P450.contigs, 
               "/home/ele/thesis/experimental_infection/figures/eel_onlyDE_heat.png")

heatmap.contig(contigs.l[[2]], "AJ", P450.contigs, 
               "/home/ele/thesis/experimental_infection/figures/eel_all_heat.png")

## population ###
heatmap.contig(pop.only, "A\\w_R", cox2.contigs,
               "/home/ele/thesis/experimental_infection/figures/pop_only_heat.png")

heatmap.contig(contigs.l[[3]][contigs.l[[3]]%in%sig.pop], "A\\w_R", cox2.contigs,
               "/home/ele/thesis/experimental_infection/figures/pop_onlyDE_heat.png")

heatmap.contig(contigs.l[[3]], "A\\w_R", cox2.contigs,
               "/home/ele/thesis/experimental_infection/figures/pop_all_heat.png")

heatmap.contig(intersect(sig.pop.female, sig.pop.male), "A\\w_R", cox2.contigs,
               "/home/ele/thesis/experimental_infection/figures/pop_inters_DEseq_heat.png")

heatmap.contig(intersect(sig.pop.female, sig.pop.male), "A\\w_R", cox2.contigs,
               "/home/ele/thesis/experimental_infection/figures/pop_inters_DEseq_heat.png")

## MDS plots
png("/home/ele/thesis/experimental_infection/figures/mds.png")
plotMDS(ed)
dev.off()

@ 


