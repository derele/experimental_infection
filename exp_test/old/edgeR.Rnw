<<edgeR, echo=FALSE, cache=TRUE, results=hide>>=

## Counts frame to full DGEList
ed <- DGEList(co.f, lib.size=colSums(co.f))
ed <- calcNormFactors(ed)
ed <- estimateGLMCommonDisp(ed, design=design)
ed <- estimateGLMTrendedDisp(ed, design=design)
ed <- estimateGLMTagwiseDisp(ed, design=design)

## glmfit for DGEList uding tagwise dispersion
glmfit <- glmFit(ed, design, dispersion=ed$tagwise.dispersion)

glm.wrapper <- function(de.obj, fit.obj, conds.regex){
  glm.list <- list()
  coe <- names(as.data.frame(fit.obj$design))
  coe.l <- lapply(conds.regex, function (x) grep(x, coe))
  for (i in 1:length(conds.regex)){
    glm.list[[conds.regex[[i]]]] <- glmLRT(de.obj, fit.obj, coef=coe.l[[i]])
  }
  return(glm.list)
}

## selects all coefficients being contained in each other hierachically
combi.conds <- gsub(":", ".*", names(as.data.frame(glmfit$design))[2:8])
glm.l <- glm.wrapper(ed, glmfit, combi.conds)

## topTags works (same as using p.adjust directly)
topTags.l <- lapply(glm.l, function (x){
  topTags(x, n=40000) ## set as high as the length 
})

### summarize per contig
contigs.l <- lapply(topTags.l, function (x) rownames(x$table[x$table$adj.P.Val<0.05,]))
contigs.all <- unlist(contigs.l)

## plot fitted vs. observed values for all contigs and libraries 
cf <- cbind(rownames(co.f), co.f)
observed <- melt.data.frame(cf, id.vars="rownames(co.f)")
names(observed) <- c("contig", "lib", "observed")
long.fitted <- melt(glmfit$fitted.values)
names(long.fitted) <- c("contig", "lib", "fitted")
fit.comb <- merge(observed, long.fitted)

fit.plot <- ggplot(fit.comb, aes(observed, fitted)) +
  geom_point() +
  facet_wrap(~lib) +
  scale_x_log10() +
  scale_y_log10() +
  theme_bw()

## Venn diagrams
all.venn <- venn.diagram(list(pop_all     = match(contigs.l[[3]], contigs.all),
                              eel_all     = match(contigs.l[[2]], contigs.all),
                              sex_all     = match(contigs.l[[1]], contigs.all)),
                         filename = NULL)
Not.all <- length(rownames(co.f)[!rownames(co.f)%in%unlist(contigs.l[1:3])])


sex.venn <- venn.diagram(list(sex_all     = match(contigs.l[[1]], contigs.all),
                              sex_eel     = match(contigs.l[[4]], contigs.all),
                              sex_pop     = match(contigs.l[[5]], contigs.all),
                              sex_eel_pop = match(contigs.l[[7]], contigs.all)),
                         filename = NULL)
Not.sex <- length(rownames(co.f)[!rownames(co.f)%in%unlist(contigs.l[c(1, 4, 5, 7)])])


eel.venn <- venn.diagram(list(eel_all     = match(contigs.l[[2]], contigs.all),
                              sex_eel     = match(contigs.l[[4]], contigs.all),
                              eel_pop     = match(contigs.l[[6]], contigs.all),
                              sex_eel_pop = match(contigs.l[[7]], contigs.all)),
                         filename = NULL)
Not.eel <- length(rownames(co.f)[!rownames(co.f)%in%unlist(contigs.l[c(2, 4, 6, 7)])])

pop.venn <- venn.diagram(list(pop_all     = match(contigs.l[[3]], contigs.all),
                              sex_pop     = match(contigs.l[[5]], contigs.all),
                              eel_pop     = match(contigs.l[[6]], contigs.all),
                              sex_eel_pop = match(contigs.l[[7]], contigs.all)),
                         filename = NULL)
Not.pop <- length(rownames(co.f)[!rownames(co.f)%in%unlist(contigs.l[c(3, 5, 6, 7)])])


@ 

<<plot.edgeR, echo=FALSE, results=hide>>=

## MDS
pdf("/home/ele/thesis/experimental_infection/figures/mds.pdf")
plotMDS(ed)
dev.off()

ggsave("/home/ele/thesis/experimental_infection/figures/fit_obs.pdf",
       fit.plot,
       width=21, height=21)


## par(mfrow = c(1, 2))
## maPlot(ed$counts[, 1], ed$counts[, 2], normalize = TRUE, pch = 19,
##            cex = 0.4, ylim = c(-8, 8))
## grid(col = "blue")
## abline(h = log2(ed$samples$norm.factors[2]/ed$samples$norm.factors[1]),
##            col = "red", lwd = 4)

## eff.libsize <- ed$samples$lib.size * ed$samples$norm.factors

## maPlot(ed$counts[, 1]/eff.libsize[1], ed$counts[, 2]/eff.libsize[2],
##     normalize = FALSE, pch = 19, cex = 0.4, ylim = c(-8, 8))
## grid(col = "blue")


@ 
  
