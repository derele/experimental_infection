<<construct.ann.frame, cache=TRUE, echo=FALSE>>=

pData <- cbind(as.character(sex.conds), as.character(eel.conds), as.character(pop.conds))
rownames(pData) <- colnames(vsd)
pData <- as.data.frame(pData)
names(pData) <- c("sex", "host", "population")

metadata <- data.frame(labelDescription = c("Sex",
                         "host species", "parasite population"),
                       row.names = c("sex", "host", "population"))

phenoData <- new("AnnotatedDataFrame", data = pData,
                 varMetadata = metadata)


## other Go annotations (see enrichment for choice)
isOxidoreductase <- unlist(by(all.ann.mapping,
                              all.ann.mapping$pept_id,
                              function (x) any("GO:0016491" %in% x$go_term)))


isMitochondrial <- unlist(by(all.ann.mapping,
                             all.ann.mapping$pept_id,
                             function (x) any("GO:0005739" %in% x$go_term)))

isELDevelopment <- unlist(by(all.ann.mapping,
                             all.ann.mapping$pept_id,
                             function (x) any (c ("GO:0002164", "GO:0009791") %in% x$go_term )))

isResponsetoStim <- unlist(by(all.ann.mapping,
                              all.ann.mapping$pept_id,
                              function (x) any (c ("GO:0050896") %in% x$go_term )))

isPhosphatase <- unlist(by(all.ann.mapping,
                           all.ann.mapping$pept_id,
                           function (x) any (c ("GO:0016791") %in% x$go_term )))

isMembrane <- unlist(by(all.ann.mapping,
                           all.ann.mapping$pept_id,
                           function (x) any (c ("GO:0016020") %in% x$go_term )))


isAntigenProc <- unlist(by(all.ann.mapping,
                           all.ann.mapping$pept_id,
                           function (x) any (c ("GO:0002478") %in% x$go_term )))

isEndosome <- unlist(by(all.ann.mapping,
                           all.ann.mapping$pept_id,
                           function (x) any (c ("GO:0005768") %in% x$go_term )))


isProtLipComp <- unlist(by(all.ann.mapping,
                           all.ann.mapping$pept_id,
                           function (x) any (c ("GO:0032994") %in% x$go_term )))


annGO <- cbind(isMitochondrial,
               isOxidoreductase,
               isELDevelopment,
               isResponsetoStim,
               isPhosphatase,
               isMembrane,
               isAntigenProc,
               isEndosome,
               isProtLipComp
)

annGO <- merge(rownames(vsd), annGO, by.x=1, by.y=0, all.x=TRUE)
rownames(annGO) <- annGO$x
annGO$x <- NULL
fData <- annGO[rownames(vsd),]
featureData <- new("AnnotatedDataFrame", data = fData)

allSet <- new("ExpressionSet", exprs=as.matrix(vsd), phenoData = phenoData,
              featureData = featureData)

## ugly hack to get the Bm.annotation pasted to the clustered features (contigs in rows)
Bm.pasty <- paste(contig.df[contig.df$contig%in%featureNames(allSet), "contig"],
                  contig.df[contig.df$contig%in%featureNames(allSet), "Bm.annot"],
                  sep="\n")
names(Bm.pasty) <- contig.df[contig.df$contig%in%featureNames(allSet), "contig"]

allSet.pasty <- allSet
featureNames(allSet.pasty) <- Bm.pasty[featureNames(allSet.pasty)]

contigs.l.pasty <- lapply(contigs.l, function(x) Bm.pasty[x])
ortho.l.pasty <- lapply(ortho.l, function(x) Bm.pasty[x])

sex.only <- contigs.l[[1]][!contigs.l[[1]]%in%contigs.l[[2]] & !contigs.l[[1]]%in%contigs.l[[3]]]
eel.only <- contigs.l[[2]][!contigs.l[[2]]%in%contigs.l[[1]] & !contigs.l[[2]]%in%contigs.l[[3]]]
pop.only <- contigs.l[[3]][!contigs.l[[3]]%in%contigs.l[[1]] & !contigs.l[[3]]%in%contigs.l[[2]]]

sex.only.pasty <- contigs.l.pasty[[1]][!contigs.l.pasty[[1]]%in%contigs.l.pasty[[2]] &
                                       !contigs.l.pasty[[1]]%in%contigs.l.pasty[[3]]]
eel.only.pasty <- contigs.l.pasty[[2]][!contigs.l.pasty[[2]]%in%contigs.l.pasty[[1]] &
                                       !contigs.l.pasty[[2]]%in%contigs.l.pasty[[3]]]
pop.only.pasty <- contigs.l.pasty[[3]][!contigs.l.pasty[[3]]%in%contigs.l.pasty[[1]] &
                                       !contigs.l.pasty[[3]]%in%contigs.l.pasty[[2]]]

### construction of Heatmaps ##################################
##  Sex
ann.heat.sex = annHeatmap2(exprs(allSet[contigs.l[[1]]]),
  ann=list(Col=list(data=pData(allSet[contigs.l[[1]]]), inclRef=FALSE),
    Row=list(data=fData(allSet[contigs.l[[1]]]), inclRef=FALSE)))

ann.heat.sex.only = annHeatmap2(exprs(allSet[sex.only]),
  ann=list(Col=list(data=pData(allSet[sex.only]), inclRef=FALSE),
    Row=list(data=fData(allSet[sex.only]), inclRef=FALSE)))

ann.heat.sex.ortho = annHeatmap2(exprs(allSet[ortho.l[[1]]]),
  ann=list(Col=list(data=pData(allSet[ortho.l[[1]]]), inclRef=FALSE),
    Row=list(data=fData(allSet[ortho.l[[1]]]), inclRef=FALSE)))

## Eel
ann.heat.eel = annHeatmap2(exprs(allSet[contigs.l[[2]]]),
  ann=list(Col=list(data=pData(allSet[contigs.l[[2]]]), inclRef=FALSE),
    Row=list(data=fData(allSet[contigs.l[[2]]]), inclRef=FALSE)))

ann.heat.eel.male = annHeatmap2(exprs(allSet[contigs.l[[2]],allSet$sex=="male"]),
  ann=list(Col=list(data=pData(allSet[,allSet$sex=="male"])[,2:3], inclRef=FALSE),
    Row=list(data=fData(allSet[contigs.l[[2]],allSet$sex=="male"]), inclRef=FALSE)))

ann.heat.eel.only = annHeatmap2(exprs(allSet.pasty[eel.only.pasty]),
  ann=list(Col=list(data=pData(allSet.pasty[eel.only.pasty]), inclRef=FALSE)))

ann.heat.eel.ortho = annHeatmap2(exprs(allSet.pasty[ortho.l.pasty[[2]]]),
  ann=list(Col=list(data=pData(allSet.pasty[ortho.l.pasty[[2]]]), inclRef=FALSE)))

## Pop
ann.heat.pop = annHeatmap2(exprs(allSet[contigs.l[[3]]]),
  ann=list(Col=list(data=pData(allSet[contigs.l[[3]]]), inclRef=FALSE),
    Row=list(data=fData(allSet[contigs.l[[3]]]), inclRef=FALSE)))

ann.heat.pop.male = annHeatmap2(exprs(allSet[contigs.l[[3]],allSet$sex=="male"]),
  ann=list(Col=list(data=pData(allSet[contigs.l[[3]],allSet$sex=="male"])[,2:3], inclRef=FALSE),
    Row=list(data=fData(allSet[contigs.l[[3]],allSet$sex=="male"]), inclRef=FALSE)))

ann.heat.pop.only = annHeatmap2(exprs(allSet.pasty[pop.only.pasty]),
  ann=list(Col=list(data=pData(allSet.pasty[pop.only.pasty]), inclRef=FALSE)))

ann.heat.pop.ortho = annHeatmap2(exprs(allSet.pasty[ortho.l.pasty[[3]]]),
  ann=list(Col=list(data=pData(allSet.pasty[ortho.l.pasty[[3]]]), inclRef=FALSE)))

## Pop:Eel

ann.heat.pop.eel = annHeatmap2(exprs(allSet.pasty[contigs.l.pasty[[6]]]),
  ann=list(Col=list(data=pData(allSet.pasty[contigs.l.pasty[[6]]]), inclRef=FALSE)))

@ 

<<plot.ann.heat, echo=FALSE>>=

## Sex
pdf("../figures/sex_only_heat.pdf" , width=14, height=14)
plot(ann.heat.sex.only)
dev.off()

pdf("../figures/sex_all_heat.pdf", width=14, height=14)
plot(ann.heat.sex)
dev.off()

pdf("../figures/sex_ortho_heat.pdf", width=14, height=14)
plot(ann.heat.sex.ortho)
dev.off()

## Eel
pdf("../figures/eel_only_heat.pdf", width=14, height=14)
plot(ann.heat.eel.only)
dev.off()

pdf("../figures/eel_all_heat.pdf", width=14, height=14)
plot(ann.heat.eel)
dev.off()

pdf("../figures/eel_ortho_heat.pdf", width=14, height=14)
plot(ann.heat.eel.ortho)
dev.off()

pdf("../figures/eel_male_heat.pdf", width=14, height=14)
plot(ann.heat.eel.male)
dev.off()

## Pop
pdf("../figures/pop_only_heat.pdf", width=14, height=14)
plot(ann.heat.pop.only)
dev.off()

pdf("../figures/pop_all_heat.pdf", width=14, height=14)
plot(ann.heat.pop)
dev.off()

pdf("../figures/pop_ortho_heat.pdf", width=14, height=14)
plot(ann.heat.pop.ortho)
dev.off()

pdf("../figures/pop_male_heat.pdf", width=14, height=14)
plot(ann.heat.pop.male)
dev.off()

## Pop:Eel
pdf("../figures/pop_eel_heat.pdf", width=14, height=14)
plot(ann.heat.pop.eel)
dev.off()


@ 
