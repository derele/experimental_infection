<<annot.test, echo=FALSE, cache=TRUE>>=

ann <- GO.annot[GO.annot$pept_id%in%rownames(co.f), ]
ann.mapping <- ann[,c("pept_id", "go_term")]

goframeData <- as.data.frame(cbind(frame.go_id=ann.mapping$go_term,
                                   frame.Evidence="IEA",
                                   frame.gene_id=ann.mapping$pept_id))
goFrame <- GOFrame(goframeData, organism="Anguillicola crassus")

## This should work to produce somethin similar to GSEA , traversing
## through all GO levels, but it somehow doesn't
## goAllFrame <- GOAllFrame(goFrame)
## all.ann.mapping <- as.data.frame(cbind(pept_id=goAllFrame@data$gene_id,
##                                         go_term=goAllFrame@data$go_id))

over.goseq <- function(de.contigs, contigs, map){
  de <- as.integer(contigs%in%de.contigs)
  names(de) <- contigs
  bias.data <- as.integer(contig.df[contig.df$contig%in%rownames(co.f),
                                    "length"])
  pwf <- nullp(de, bias.data=bias.data, plot.fit=FALSE) 
  go.stats <- goseq(pwf, gene2cat=map, method='Wallenius')
  GO.over <- merge(go.stats[go.stats$over_represented_pvalue<0.05,],
                       ann, by.x="category", by.y="go_term")[, 1:6]
  ratio <- do.call("rbind",
                   by(GO.over, GO.over$category, function(x) {
                     c(length(de[names(de)%in%x$pept_id & de>0]),
                       length(unique(x$pept_id)))}))
  ratio <- as.data.frame(ratio)
  names(ratio) <- c("count", "size")
  GO.over <- GO.over[GO.over$pept_id%in%names(de[de>0]), ]
  merge(GO.over, ratio, by.x="category", by.y="row.names")
}

GO.over.sex <- over.goseq(contigs.l[[1]],
                          rownames(co.f),
                          ann.mapping)
GO.over.eel <- over.goseq(contigs.l[[2]],
                          rownames(co.f),
                          ann.mapping)
GO.over.pop <- over.goseq(contigs.l[[3]],
                          rownames(co.f),
                          ann.mapping)
GO.over.sex.eel <- over.goseq(contigs.l[[4]],
                              rownames(co.f),
                              ann.mapping)
GO.over.sex.pop <- over.goseq(contigs.l[[5]],
                              rownames(co.f),
                              ann.mapping)
GO.over.eel.pop <- over.goseq(contigs.l[[6]],
                              rownames(co.f),
                              ann.mapping)
GO.over.sex.eel.pop <- over.goseq(contigs.l[[7]],
                                  rownames(co.f),
                                  ann.mapping)

blast.annot.in <- function (annot.regex){
  contig.df[grepl(paste("^", annot.regex, "$", sep=""), contig.df$contig) |
            grepl(annot.regex, contig.df$Bm.annot, ignore.case=TRUE) |
            grepl(annot.regex, contig.df$Ce.annot, ignore.case=TRUE) |
            grepl(annot.regex, contig.df$nr.uniprot.annot, ignore.case=TRUE),
            c("contig", "Bm.annot", "Bm.bit", "Ce.annot", "Ce.bit", "nr.uniprot.annot", "nr.bit")]
}

## specific annotation counts-highlighting
get.annot.count.table <- function (annot.regex){
  contigs <- contig.df[grepl(annot.regex, contig.df$Bm.annot, ignore.case=TRUE) |
                       grepl(annot.regex, contig.df$Ce.annot, ignore.case=TRUE) |
                       grepl(annot.regex, contig.df$nr.uniprot.annot, ignore.case=TRUE),
                       "contig"]
  counts <- co.f[rownames(co.f)%in%contigs,]
  signif.counts <- co.f[rownames(co.f)%in%contigs &
                        rownames(co.f)%in%contigs.l[[3]],]
  signif.means <- tapply(t(colSums(signif.counts)), eel.conds:pop.conds, mean)
  signif.sums <- tapply(t(colSums(signif.counts)), eel.conds:pop.conds, sum)
  total.means <- tapply(t(colSums(counts)), eel.conds:pop.conds, mean)
  total.sums <-  tapply(t(colSums(counts)), eel.conds:pop.conds, sum)
  rbind(signif.means, signif.sums, total.means, total.sums)
}

## highlighting very interesting Cytochrome C - contigs:
cox.table <- get.annot.count.table("Cytochrome C oxidase subunit")
cox.tab <- xtable(cox.table)

## highlighting very interesting Cystatin:
cy.table <- get.annot.count.table("Cystatin")
cy.tab <- xtable(cy.table)

## Cuticullar collagen:
col.table <- get.annot.count.table("Cutic.* collagen")
col.t <- xtable(col.table)

col7.table <- get.annot.count.table("Cuticle collagen 7")

nadh.table <- get.annot.count.table("NADH dehydrogenase")
nadh1.table <- get.annot.count.table("NADH dehydrogenase ND1|NADH dehydrogenase subunit 1")
nadh4.table <- get.annot.count.table("NADH dehydrogenase ND4|NADH dehydrogenase subunit 4")
nadh5.table <- get.annot.count.table("NADH dehydrogenase ND5|NADH dehydrogenase subunit 5")
